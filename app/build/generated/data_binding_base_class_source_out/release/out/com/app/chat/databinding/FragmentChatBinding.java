// Generated by view binder compiler. Do not edit!
package com.app.chat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.chat.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnImage;

  @NonNull
  public final ImageButton btnSend;

  @NonNull
  public final EditText etMessage;

  @NonNull
  public final RecyclerView rvMessages;

  @NonNull
  public final MaterialToolbar toolbarChat;

  @NonNull
  public final ToolbarChatUserInfoBinding userInfoLayout;

  private FragmentChatBinding(@NonNull LinearLayout rootView, @NonNull ImageButton btnImage,
      @NonNull ImageButton btnSend, @NonNull EditText etMessage, @NonNull RecyclerView rvMessages,
      @NonNull MaterialToolbar toolbarChat, @NonNull ToolbarChatUserInfoBinding userInfoLayout) {
    this.rootView = rootView;
    this.btnImage = btnImage;
    this.btnSend = btnSend;
    this.etMessage = etMessage;
    this.rvMessages = rvMessages;
    this.toolbarChat = toolbarChat;
    this.userInfoLayout = userInfoLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnImage;
      ImageButton btnImage = ViewBindings.findChildViewById(rootView, id);
      if (btnImage == null) {
        break missingId;
      }

      id = R.id.btnSend;
      ImageButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.etMessage;
      EditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.rvMessages;
      RecyclerView rvMessages = ViewBindings.findChildViewById(rootView, id);
      if (rvMessages == null) {
        break missingId;
      }

      id = R.id.toolbarChat;
      MaterialToolbar toolbarChat = ViewBindings.findChildViewById(rootView, id);
      if (toolbarChat == null) {
        break missingId;
      }

      id = R.id.userInfoLayout;
      View userInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (userInfoLayout == null) {
        break missingId;
      }
      ToolbarChatUserInfoBinding binding_userInfoLayout = ToolbarChatUserInfoBinding.bind(userInfoLayout);

      return new FragmentChatBinding((LinearLayout) rootView, btnImage, btnSend, etMessage,
          rvMessages, toolbarChat, binding_userInfoLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
